apiVersion: apps/v1
kind: Deployment
metadata:
  name: fineract
  namespace: fineract-prod
spec:
  replicas: 2
  selector:
    matchLabels: { app: fineract }
  template:
    metadata:
      labels: { app: fineract }
    spec:
      imagePullSecrets:
        - name: ghcr-pull
      containers:
        - name: fineract
          image: ghcr.io/benythomas/fineract:prod   # <â€” built by CI
          imagePullPolicy: IfNotPresent
          ports: [{ containerPort: 8080 }]
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: prod
            - name: FINERACT_HIKARI_DRIVER_CLASS_NAME
              value: org.mariadb.jdbc.Driver
            - name: DB_HOST
              valueFrom: { secretKeyRef: { name: db-secrets, key: DB_HOST } }
            - name: DB_PORT
              valueFrom: { secretKeyRef: { name: db-secrets, key: DB_PORT } }
            - name: DB_NAME_TENANTS
              valueFrom: { secretKeyRef: { name: db-secrets, key: DB_NAME_TENANTS } }
            - name: FINERACT_HIKARI_JDBC_URL
              value: jdbc:mariadb://$(DB_HOST):$(DB_PORT)/$(DB_NAME_TENANTS)
            - name: FINERACT_HIKARI_USERNAME
              valueFrom: { secretKeyRef: { name: db-secrets, key: DB_USER } }
            - name: FINERACT_HIKARI_PASSWORD
              valueFrom: { secretKeyRef: { name: db-secrets, key: DB_PASSWORD } }
            - name: FINERACT_DEFAULT_TENANTDB_HOSTNAME
              valueFrom: { secretKeyRef: { name: db-secrets, key: DB_HOST } }
            - name: FINERACT_DEFAULT_TENANTDB_PORT
              valueFrom: { secretKeyRef: { name: db-secrets, key: DB_PORT } }
            - name: FINERACT_DEFAULT_TENANTDB_UID
              valueFrom: { secretKeyRef: { name: db-secrets, key: DB_ROOT_USER } }
            - name: FINERACT_DEFAULT_TENANTDB_PWD
              valueFrom: { secretKeyRef: { name: db-secrets, key: DB_ROOT_PASSWORD } }
            - name: FINERACT_DEFAULT_TENANTDB_NAME
              value: fineract_default
          volumeMounts:
            - name: app-config
              mountPath: /opt/fineract/application.properties
              subPath: application.properties
          readinessProbe:
            httpGet: { path: /actuator/health, port: 8080 }
            initialDelaySeconds: 25
            periodSeconds: 10
          livenessProbe:
            httpGet: { path: /actuator/health/liveness, port: 8080 }
            initialDelaySeconds: 60
            periodSeconds: 20
          resources:
            requests: { cpu: "250m", memory: "512Mi" }
            limits:   { cpu: "1000m", memory: "2Gi" }
      volumes:
        - name: app-config
          configMap:
            name: fineract-config
            items:
              - key: application.properties
                path: application.properties
