name: Build & Deploy Fineract
on:
  push:
    branches: [ "main" ]

permissions:
  contents: read
  packages: write  # required for GHCR push

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Login to GHCR (uses GITHUB_TOKEN)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Compute image tags (lowercased owner)
        id: img
        run: |
          OWNER_LC="$(echo "${GITHUB_REPOSITORY_OWNER}" | tr '[:upper:]' '[:lower:]')"
          echo "owner_lc=$OWNER_LC" >> $GITHUB_OUTPUT
          echo "image=ghcr.io/${OWNER_LC}/fineract:${GITHUB_SHA}" >> $GITHUB_OUTPUT
          echo "image_latest=ghcr.io/${OWNER_LC}/fineract:main" >> $GITHUB_OUTPUT

      # If your repo needs a Java build before dockerizing, add a step here (e.g., Gradle/Maven).
      # Then ensure your Dockerfile copies the built JAR. If the Dockerfile already builds the app, keep as is.

      - name: Build & Push image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ steps.img.outputs.image }}
            ${{ steps.img.outputs.image_latest }}

      - name: Roll out to MicroK8s
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            sudo microk8s kubectl -n kazy-prod set image deploy/fineract-server fineract-server=${{ steps.img.outputs.image }}
            sudo microk8s kubectl -n kazy-prod rollout status deploy/fineract-server --timeout=5m
